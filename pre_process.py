# -*- coding: utf-8 -*-
"""data_preparation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cWWsndFakCCQ7gB5Y8LtyttlDEoQCQ68

#  Original and Mask Images Prepare
"""

from PIL import Image
import os

import numpy as np

def convert_one_channel(img):
    #some images have 3 channels , although they are grayscale image
    if len(img.shape) > 2:
        img=img[:,:,0]
        return img
    else:
        return img

def pre_process_images(resize_shape,path):
    dirs=os.listdir(path)
    l = []
    dirs.sort()
    for i in range (1,len(dirs)+1):
        img=Image.open(path+str(i)+'.png')
        img=img.resize((resize_shape),Image.ANTIALIAS)
        img=convert_one_channel(np.asarray(img))
        l.append(img)
    return l

! git clone https://github.com/RobertSmithers/TeethSegmentation.git

import sys
sys.path.append("/content/TeethSegmentation")

# Commented out IPython magic to ensure Python compatibility.
# %cd '/content/TeethSegmentation/'

og_path = '/content/TeethSegmentation/data/original_img/'
masked_path = '/content/TeethSegmentation/data/masked_img/'

resize_shape = (3104,1200)
og_img = pre_process_images(resize_shape, og_path)

mask_img = pre_process_images(resize_shape, masked_path)
